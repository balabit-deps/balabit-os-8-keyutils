Description: Rename arguments to dh_compute_kdf to match dh_compute
 and avoid using the C++ keyword "private", which breaks some rdeps
Author: Adam Conrad <adconrad@ubuntu.com>
Bug-Debian: https://bugs.debian.org/923011
Last-Update: 2019-10-20

--- keyutils-1.6.orig/keyctl.c
+++ keyutils-1.6/keyctl.c
@@ -1703,7 +1703,7 @@ static void act_keyctl_dh_compute(int ar
 
 static void act_keyctl_dh_compute_kdf(int argc, char *argv[])
 {
-	key_serial_t private, prime, base;
+	key_serial_t priv, prime, base;
 	char *buffer;
 	char *p;
 	int ret, sep, col;
@@ -1712,7 +1712,7 @@ static void act_keyctl_dh_compute_kdf(in
 	if (argc != 6)
 		format();
 
-	private = get_key_id(argv[1]);
+	priv = get_key_id(argv[1]);
 	prime = get_key_id(argv[2]);
 	base = get_key_id(argv[3]);
 
@@ -1724,7 +1724,7 @@ static void act_keyctl_dh_compute_kdf(in
 	if (!buffer)
 		error("dh_compute: cannot allocate memory");
 
-	ret = keyctl_dh_compute_kdf(private, prime, base, argv[5], NULL,  0,
+	ret = keyctl_dh_compute_kdf(priv, prime, base, argv[5], NULL,  0,
 				    buffer, buflen);
 	if (ret < 0)
 		error("keyctl_dh_compute_kdf");
@@ -1763,7 +1763,7 @@ static void act_keyctl_dh_compute_kdf(in
 
 static void act_keyctl_dh_compute_kdf_oi(int argc, char *argv[])
 {
-	key_serial_t private, prime, base;
+	key_serial_t priv, prime, base;
 	char *buffer;
 	char *p;
 	int ret, sep, col;
@@ -1774,7 +1774,7 @@ static void act_keyctl_dh_compute_kdf_oi
 	if (argc != 6)
 		format();
 
-	private = get_key_id(argv[1]);
+	priv = get_key_id(argv[1]);
 	prime = get_key_id(argv[2]);
 	base = get_key_id(argv[3]);
 
@@ -1788,7 +1788,7 @@ static void act_keyctl_dh_compute_kdf_oi
 
 	oi = grab_stdin(&oilen);
 
-	ret = keyctl_dh_compute_kdf(private, prime, base, argv[5], oi,  oilen,
+	ret = keyctl_dh_compute_kdf(priv, prime, base, argv[5], oi,  oilen,
 				    buffer, buflen);
 	if (ret < 0)
 		error("keyctl_dh_compute_kdf");
--- keyutils-1.6.orig/keyutils.c
+++ keyutils-1.6/keyutils.c
@@ -244,11 +244,11 @@ long keyctl_dh_compute(key_serial_t priv
 	return keyctl(KEYCTL_DH_COMPUTE, &params, buffer, buflen, 0);
 }
 
-long keyctl_dh_compute_kdf(key_serial_t private, key_serial_t prime,
+long keyctl_dh_compute_kdf(key_serial_t priv, key_serial_t prime,
 			   key_serial_t base, char *hashname, char *otherinfo,
 			   size_t otherinfolen, char *buffer, size_t buflen)
 {
-	struct keyctl_dh_params params = { .priv = private,
+	struct keyctl_dh_params params = { .priv = priv,
 					   .prime = prime,
 					   .base = base };
 	struct keyctl_kdf_params kdfparams = { .hashname = hashname,
--- keyutils-1.6.orig/keyutils.h
+++ keyutils-1.6/keyutils.h
@@ -201,7 +201,7 @@ extern long keyctl_invalidate(key_serial
 extern long keyctl_get_persistent(uid_t uid, key_serial_t id);
 extern long keyctl_dh_compute(key_serial_t priv, key_serial_t prime,
 			      key_serial_t base, char *buffer, size_t buflen);
-extern long keyctl_dh_compute_kdf(key_serial_t private, key_serial_t prime,
+extern long keyctl_dh_compute_kdf(key_serial_t priv, key_serial_t prime,
 				  key_serial_t base, char *hashname,
 				  char *otherinfo, size_t otherinfolen,
 				  char *buffer, size_t buflen);
